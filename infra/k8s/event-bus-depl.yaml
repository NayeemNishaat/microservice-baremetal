apiVersion: apps/v1
kind: Deployment
metadata:
  name: event-bus-depl
  # labels:
  #   app: event-bus-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: event-bus
  template:
    metadata:
      labels:
        app: event-bus
    spec:
      containers:
        - name: event-bus
          image: nayeemnishaat/event-bus:v1
          imagePullPolicy: Never
          resources:
            limits:
              memory: 200Mi
              cpu: 100m
--- # Note: Creating ClusterIP Service for communication between pods
apiVersion: v1
kind: Service
metadata:
  name: event-bus-svc
spec:
  selector:
    app: event-bus
  type: ClusterIP # By default if service type is not specified then ClusterIP service is used
  ports:
    - name: event-bus
      protocol: TCP
      port: 10000
      targetPort: 10000
# kubectl get nodes -> Get Nodes
# docker exec -it kind-control-plane bash -> Exec into the kind node
# crictl rmi <imageId> -> To remove the loaded image

# Important: When using kind we need to load the built image into the kind cluster -> kind load docker-image <image-name>
# Important: When using minikube we need to user the docker daemon with minikube -> eval $(minikube docker-env) and build the image in the same shell because the docker-env environment variable is set only to the current shell session. -> docker build -t <image-name> .
